// src/lib/emailjs.ts
import emailjs from '@emailjs/browser';

// Configuration
const EMAILJS_CONFIG = {
  serviceId: 'your_service_id',     // ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å EmailJS
  templateId: 'your_template_id',   // ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å EmailJS
  publicKey: 'your_public_key'      // ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å EmailJS
};

/**
 * ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà
 */
export async function sendNewOrderEmail(params: {
  supervisorEmail: string;
  supervisorName: string;
  requesterName: string;
  orderNo: number;
  orderDate: string;
  totalAmount: number;
}) {
  try {
    const templateParams = {
      to_email: params.supervisorEmail,
      to_name: params.supervisorName,
      from_name: '‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
      subject: `üõí ‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ #${params.orderNo}`,
      order_no: params.orderNo,
      requester_name: params.requesterName,
      order_date: params.orderDate,
      total_amount: params.totalAmount.toLocaleString('th-TH'),
      message: `‡∏°‡∏µ‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å ${params.requesterName} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${params.totalAmount.toLocaleString('th-TH')} ‡∏ö‡∏≤‡∏ó ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥`,
      approval_url: `${window.location.origin}/orders/tracking`
    };

    const result = await emailjs.send(
      EMAILJS_CONFIG.serviceId,
      EMAILJS_CONFIG.templateId,
      templateParams,
      EMAILJS_CONFIG.publicKey
    );

    console.log('‚úÖ Email sent successfully:', result);
    return result;
  } catch (error) {
    console.error('‚ùå Email sending failed:', error);
    throw error;
  }
}

/**
 * ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
 */
export async function sendApprovedEmail(params: {
  procurementEmail: string;
  procurementName: string;
  requesterName: string;
  orderNo: number;
  orderDate: string;
  totalAmount: number;
  approverName: string;
}) {
  try {
    const templateParams = {
      to_email: params.procurementEmail,
      to_name: params.procurementName,
      from_name: '‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
      subject: `‚úÖ ‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ #${params.orderNo}`,
      order_no: params.orderNo,
      requester_name: params.requesterName,
      order_date: params.orderDate,
      total_amount: params.totalAmount.toLocaleString('th-TH'),
      approver_name: params.approverName,
      message: `‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #${params.orderNo} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å ${params.approverName} ‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠`,
      procurement_url: `${window.location.origin}/orders/list`
    };

    const result = await emailjs.send(
      EMAILJS_CONFIG.serviceId,
      'template_procurement', // ‡∏≠‡∏µ‡∏Å template ‡∏´‡∏ô‡∏∂‡πà‡∏á
      templateParams,
      EMAILJS_CONFIG.publicKey
    );

    console.log('‚úÖ Procurement email sent:', result);
    return result;
  } catch (error) {
    console.error('‚ùå Procurement email failed:', error);
    throw error;
  }
}

/**
 * ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
 */
export async function sendStatusUpdateEmail(params: {
  buyerEmail: string;
  buyerName: string;
  orderNo: number;
  status: string;
  message?: string;
}) {
  try {
    const templateParams = {
      to_email: params.buyerEmail,
      to_name: params.buyerName,
      from_name: '‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠',
      subject: `üì¶ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #${params.orderNo}`,
      order_no: params.orderNo,
      status: params.status,
      message: params.message || `‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ #${params.orderNo} ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô ${params.status}`,
      tracking_url: `${window.location.origin}/orders/tracking`
    };

    const result = await emailjs.send(
      EMAILJS_CONFIG.serviceId,
      'template_status_update', // template ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
      templateParams,
      EMAILJS_CONFIG.publicKey
    );

    console.log('‚úÖ Status update email sent:', result);
    return result;
  } catch (error) {
    console.error('‚ùå Status update email failed:', error);
    throw error;
  }
}

/**
 * Initialize EmailJS (‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ô main app)
 */
export function initEmailJS() {
  emailjs.init(EMAILJS_CONFIG.publicKey);
  console.log('üìß EmailJS initialized');
}